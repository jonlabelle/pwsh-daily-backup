{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",

    "configurations": [
        {
            "name": "PowerShell: Run Pester unit tests",
            "type": "PowerShell",
            "request": "launch",
            "script": "Invoke-Pester",
            // prettier-ignore
            "args": [
                "./test/DailyBackup.Tests.ps1",
                "-Verbose"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run integration tests",
            "type": "PowerShell",
            "request": "launch",
            "script": "./test/IntegrationTests.ps1",
            // prettier-ignore
            "args": [
                "-Verbose",
                "-CleanupAfterTests:$true"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run integration tests (dry-run)",
            "type": "PowerShell",
            "request": "launch",
            "script": "./test/IntegrationTests.ps1",
            // prettier-ignore
            "args": [
                "-WhatIf",
                "-Verbose",
                "-CleanupAfterTests:$false"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run all tests",
            "type": "PowerShell",
            "request": "launch",
            "script": "${workspaceFolder}/.vscode/run-all-tests.ps1",
            // prettier-ignore
            "args": [
                "-Verbose"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run original tests",
            "type": "PowerShell",
            "request": "launch",
            "script": "./test/Tests.ps1",
            // prettier-ignore
            "args": ["-Verbose"],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run original tests (dry-run)",
            "type": "PowerShell",
            "request": "launch",
            "script": "./test/Tests.ps1",
            // prettier-ignore
            "args": [
                "-WhatIf",
                "-Verbose"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Bash: Run tests",
            "type": "node",
            "request": "launch",
            "skipFiles": ["<node_internals>/**"],
            "preLaunchTask": "Bash tests",
            "stopOnEntry": false
        },
        {
            "name": "PowerShell: Run PSScriptAnalyzer",
            "type": "PowerShell",
            "request": "launch",
            "script": "Invoke-ScriptAnalyzer",
            // prettier-ignore
            "args": [
                "-Settings", "PSScriptAnalyzerSettings.psd1",
                "-Path", ".",
                "-Recurse"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "PowerShell: Run current file",
            "type": "PowerShell",
            "request": "launch",
            "script": "${file}",
            "cwd": "${workspaceFolder}"
        },
        {
            // Run this launch config and then set breakpoints in your module.
            // Then you can `Import-Module -Force ./DailyBackup.psd1`
            // and run a function that will hit the breakpoint.
            "name": "PowerShell: Interactive session",
            "type": "PowerShell",
            "request": "launch",
            "cwd": ""
        }
    ]
}
