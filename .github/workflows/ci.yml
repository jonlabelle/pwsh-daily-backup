name: ci

on:
  push:
    branches: [main]
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
      - "README.md"
      - "scripts/**"
      - "docs/**"
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@main

      - name: Install required PowerShell modules
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop

          # Install latest version of Pester
          Install-Module Pester -Force -SkipPublisherCheck -ErrorAction Stop

          # Verify installed versions
          Write-Host "Installed module versions:" -ForegroundColor Green
          Get-Module PSScriptAnalyzer -ListAvailable | Select-Object Name, Version
          Get-Module Pester -ListAvailable | Select-Object Name, Version

      - name: Run static analysis
        shell: pwsh
        run: ./Build.ps1 -Task Analyze

      - name: Run unit tests
        shell: pwsh
        run: ./Build.ps1 -Task Test

      - name: Run integration tests
        shell: pwsh
        run: ./Tests/IntegrationTests.ps1 -CleanupAfterTests:$true

  build-windows-powershell:
    name: Build on Windows PowerShell Desktop
    runs-on: windows-latest

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@main

      - name: Install required PowerShell modules (Windows PowerShell)
        shell: powershell
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop

          # Install latest version of Pester
          Install-Module Pester -Force -SkipPublisherCheck -ErrorAction Stop

          # Verify installed versions
          Write-Host "Installed module versions:" -ForegroundColor Green
          Get-Module PSScriptAnalyzer -ListAvailable | Select-Object Name, Version
          Get-Module Pester -ListAvailable | Select-Object Name, Version

      - name: Run static analysis (Windows PowerShell)
        shell: powershell
        run: ./Build.ps1 -Task Analyze

      - name: Run unit tests (Windows PowerShell)
        shell: powershell
        run: ./Build.ps1 -Task Test

      - name: Run integration tests (Windows PowerShell)
        shell: powershell
        run: ./Tests/IntegrationTests.ps1 -CleanupAfterTests:$true
